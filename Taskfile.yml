version: '3'

dotenv: ['.env']

tasks:
  commit:
    desc: Зафиксировать и отправить изменения в удаленный репозиторий
    summary: |
      Команда вызывает Bash-скрипт для подготовки, выполнения и отправки коммита в удаленный репозиторий Git.
      При вызове команды можно передать сообщение для коммита через аргумент командной строки.
      Пример использования с аргументом: `task commit -- "Commit message"`
      Пример использования без аргумента: `task commit`
    cmds:
      - bash ./tools/commit.sh {{.CLI_ARGS}}

  runserver:
    desc: Запустить сервер приложения
    summary: |
      Запускает сервер приложения Django. Альтернатива команде `python manage.py runserver`.
      Интерпретатор Python запускается через Poetry из виртуального окружения проекта.
      Перед запуском сервера применяются миграции базы данных и собираются статические файлы.
      Сервер PostgreSQL запускается в контейнере через Docker Compose.
    preconditions:
      - test -f compose.yaml
      - test -f .env
    env:
      POSTGRES_HOST: localhost
    cmds:
      - docker-compose up -d postgres
      - poetry run python ./personal_website/manage.py migrate
      - poetry run python ./personal_website/manage.py collectstatic --noinput

  test:
    desc: Выполнить тесты
    summary: |
      Команда выполянет интеграционные тесты через Pytest и вызывает Bash-срипт,
      который выполняет тесты проекта Python/Django через Pytest с формированием отчета Coverage в формате HTML
      и тесты вспомогательных модулей Node.js. Интерпретатор Python запускается через Poetry из
      виртуального окружения проекта. Сервер базы данных PostgreSQL и веб-сервер
      Nginx запускаются в контейнере через Docker Compose.
    preconditions:
      - test -f compose.yaml
      - test -f .env
    env:
      POSTGRES_HOST: localhost
      NGINX_HOST: localhost
    cmds:
      - docker-compose up -d postgres nginx
      - poetry run pytest ./tests
      - bash ./personal_website/scripts/runtests.sh

  build:
    desc: Выполнить сборку образов контейнеров
    summary: |
      Выполняет сборку контейнеров Docker для сервисов приложения и nginx, определенных в файле compose.yaml.
      Инструкции по сборке образов определены в файлах Dockerfile для каждого сервиса.
    preconditions:
      - test -f compose.yaml
      - test -f .env
    cmds:
      - docker-compose build
