[tool.poetry]
name = "personal-website"
version = "0.1.0"
description = "My personal website"
authors = ["Mikhail Polyakov <mikhpo@outlook.com>"]

[tool.poetry.dependencies]
python = "^3.11"
Django = "^5.1.2"
django-tinymce = "^4.1.0"
django-cleanup = "^9.0.0"
django-imagekit = "^5.0.0"
django-admin-sortable2 = "^2.2.3"
django-extensions = "^3.2.3"
django-crispy-forms = "^2.3"
crispy-bootstrap5 = "^2024.10"
whitenoise = "^6.7.0"
gunicorn = "^23.0.0"
python-dotenv = "^1.0.1"
pytils = "^0.4.1"
pillow = "^11.0.0"
imgkit = "^1.2.3"
psycopg = { extras = ["binary"], version = "^3.2.3" }
faker = "^30.6.0"
faker-file = "^0.17.11"
model-bakery = "^1.20.0"
requests = "^2.32.3"
minio = "^7.2.9"

[tool.poetry.group.dev.dependencies]
coverage = "^7.6.3"
black = "^24.10.0"
isort = "^5.13.2"
djlint = "^1.35.2"
pytest = "^8.3.3"
pytest-subtests = "^0.11.0"
pytest-django = "^4.9.0"
pytest-cov = "^5.0.0"
pyclean = "^3.0.0"
pre-commit = "^4.0.1"
ruff = "^0.1.13"

[tool.black]
line-length = 120

[tool.isort]
line_length = 120
profile = "black"
src_paths = ["personal_website"]

[tool.ruff]
select = ["ALL"]
line-length = 120
src = ["personal_website"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104"] # __init__.py могут быть пустыми
"**/migrations/**.py" = [
    "ANN001",
    "ANN101",
    "ANN201",
    "ARG001",
    "D100",
    "D101",
    "RUF012",
] # файлы миграций создаются модулем Django
"**/tests/**.py" = ["S105", "S106", "S311"]
"**/signals.py" = ["ANN401", "ARG001"]

[tool.ruff.lint]
fixable = ["ALL"]
ignore = [
    "ANN002",
    "ANN101",
    "ANN102",
    "ANN003",
    "D205",
    "D206",
    "DJ007",
    "FA100",
    "FA102",
    "G004",
    "PT009",
    "PT027",
    "RUF001",
    "RUF002",
    "RUF003",
    "S308",
    "W191",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257" # Варианты: "google", "numpy", "pep257".

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.djlint]
ignore = "H006,H013"

[tool.pytest.ini_options]
pythonpath = "personal_website"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
DJANGO_SETTINGS_MODULE = "personal_website.settings"
testpaths = "personal_website"
addopts = "--cov=personal_website --cov-report term-missing:skip-covered --cov-report html"

[tool.coverage.run]
branch = true

[tool.coverage.report]
omit = [
    "*/tests/*",
    "*/tests.py",
    "*/__init__.py",
    "*/migrations/*",
    "manage.py",
    "wsgi.py",
    "asgi.py",
    "runners.py",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
