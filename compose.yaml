services:

  # Веб-сайт на Django. Запускается либо через Gunicorn, либо через команду runserver. 
  # Способ запуска и параметры запуска определяются скриптом entrypoint.sh.
  website:
    build:
      context: .
      dockerfile: ./personal_website/Dockerfile
      args:
        - WORK_DIR=${WORK_DIR}
    environment:
      - STORAGE_ROOT=${WORK_DIR}/storage
      - STATIC_ROOT=${WORK_DIR}/static
      - BACKUP_ROOT=${WORK_DIR}/backups
      - LOGS_ROOT=${WORK_DIR}/logs
      - TEMP_ROOT=${WORK_DIR}/temp
    env_file: .env
    ports:
      - 8000:8000
    volumes:
      - website-storage:${WORK_DIR}/storage:rw
      - website-static:${WORK_DIR}/static:rw
    depends_on:
      - postgres
    restart: always
    develop:
      watch:
        - action: rebuild
          path: .

  # Кластер PostgreSQL для веб-сайта. База данных создается автоматически.
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    env_file: .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw
    restart: always

  # Прокси-сервер Nginx. Образ включает Certbot для получения и обновления сертификатов.
  # При создании контейнера производится автоматическое создание конфигурационного файла 
  # из каталога с шаблонами и заполнение переменными окружения утилитой envbust.
  nginx:
    build: ./nginx
    environment:
      - STORAGE_ROOT=${WORK_DIR}/storage
      - STATIC_ROOT=${WORK_DIR}/static
    env_file: .env
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:rw
      - website-storage:${WORK_DIR}/storage:ro
      - website-static:${WORK_DIR}/static:ro
      - nginx-certs:/etc/letsencrypt/live/${DOMAIN_NAME}:rw
    depends_on:
      - website
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ./nginx

volumes:
  website-storage:
  website-static:
  postgres-data:
  nginx-certs:
  


