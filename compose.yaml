services:

  website:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - STORAGE_ROOT=${WORK_DIR}/storage
      - STATIC_ROOT=${WORK_DIR}/static
      - BACKUP_ROOT=${WORK_DIR}/backups
      - LOGS_ROOT=${WORK_DIR}/logs
      - TEMP_ROOT=${WORK_DIR}/temp
    env_file: .env
    ports:
      - 8000:8000
    volumes:
      - storage-root:${WORK_DIR}/storage
      - static-root:${WORK_DIR}/static
    depends_on:
      - postgres
    restart: always
    develop:
      watch:
        - action: rebuild
          path: .

  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    env_file: .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  nginx:
    image: nginx
    environment:
      - STORAGE_ROOT=${WORK_DIR}/storage
      - STATIC_ROOT=${WORK_DIR}/static
    env_file: .env
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - storage-root:${WORK_DIR}/storage
      - static-root:${WORK_DIR}/static
    depends_on:
      - website
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ./nginx

volumes:
  static-root:
  storage-root:
  postgres-data:
  


