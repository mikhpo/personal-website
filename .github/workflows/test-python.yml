# Выполнить Python тесты веб-сайта.
name: Test Python code

# Рабочий процесс выполняется при открытии и переоткрытии Pull Request,
# а также при добавлении новых коммитов в Pull Request.
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'nginx/**'
      - '.vscode/**'

env:
  DEBUG: True
  DJANGO_PORT: 8000
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  STORAGE_ROOT: ${{ github.workspace }}/storage
  STATIC_ROOT: ${{ github.workspace }}/static
  BACKUP_ROOT: ${{ github.workspace }}/backups
  LOGS_ROOT: ${{ github.workspace }}/logs
  TEMP_ROOT: ${{ github.workspace }}/temp
  PROJECT_NAME: personal_website
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  POSTGRES_NAME: personal_website
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}

jobs:
  test_python_with_coverage:
    runs-on: ubuntu-latest

    # Тесты использует службу PostgreSQL, развернутую в контейнере.
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Pytest with Coverage
        run: coverage run -m pytest
      
