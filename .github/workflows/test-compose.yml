# Выполнить сборку и запустить контейнеры, провести 
# интеграционное тестирование и тесты веб-сайта.
name: Test with Docker Compose

# Рабочий процесс выполняется при открытии и переоткрытии Pull Request,
# а также добавлении новых коммитов в PR.
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'nginx/**'
      - '.vscode/**'

env:
  DEBUG: False
  DJANGO_PORT: 8000
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  STORAGE_ROOT: ${{ github.workspace }}/storage
  STATIC_ROOT: ${{ github.workspace }}/static
  BACKUP_ROOT: ${{ github.workspace }}/backups
  LOGS_ROOT: ${{ github.workspace }}/logs
  TEMP_ROOT: ${{ github.workspace }}/temp
  PROJECT_NAME: personal_website
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  POSTGRES_NAME: personal_website
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
  NGINX_HOST: nginx
  NGINX_PORT: 80

jobs:
  test_project_compose:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # Создать пустой файл .env, потому что к нему обращается Docker Compose.
      - name: Fake env file
        run: touch .env

      # Сборка и запуск контейнеров.
      - name: Build and run Docker Compose
        run: |
          docker compose -f compose.yaml up -d
          docker compose -f compose.yaml ps -a
          sleep 20
          
      # Выполнить интеграционные тесты сервисов, запускаемых Docker Compose.
      - name: Run integration tests
        uses: addnab/docker-run-action@v3
        with:
          image: personal-website-website:latest
          run: poetry run pytest tests -p no:django
        env:
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
          POSTGRES_NAME: ${{ env.POSTGRES_NAME }}
          NGINX_HOST: ${{ env.NGINX_HOST }}
          NGINX_PORT: ${{ env.NGINX_PORT }}
        
      # Выполнить тесты основного приложения на Python и зависимостей Node.js.
      - name: Run website tests
        uses: addnab/docker-run-action@v3
        with:
          image: personal-website-website:latest
          run: |
            npm test
            poetry run coverage run -m pytest
        env:
          DEBUG: ${{ env.DEBUG }}
          SECRET_KEY: ${{ env.SECRET_KEY }}
          STORAGE_ROOT: ${{ env.STORAGE_ROOT }}
          STATIC_ROOT: ${{ env.STATIC_ROOT }}
          BACKUP_ROOT: ${{ env.BACKUP_ROOT }}
          LOGS_ROOT: ${{ env.LOGS_ROOT }}
          TEMP_ROOT: ${{ env.TEMP_ROOT }}
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
          POSTGRES_NAME: ${{ env.POSTGRES_NAME }}
          EMAIL_HOST_USER: ${{ env.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ env.EMAIL_HOST_PASSWORD }}
          DOMAIN_NAME: ${{ env.DOMAIN_NAME }}


      - name: Stop Docker Compose
        run: docker compose -f compose.yaml down