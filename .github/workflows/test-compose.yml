# Выполнить сборку и запустить контейнеры, провести 
# интеграционное тестирование и тесты веб-сайта.
name: Test with Docker Compose

# Рабочий процесс выполняется при открытии и переоткрытии Pull Request,
# а также добавлении новых коммитов в PR.
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'nginx/**'
      - '.vscode/**'

env:
  DEBUG: True
  DJANGO_PORT: 8000
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  STORAGE_ROOT: /srv/website/storage
  STATIC_ROOT: /srv/website/static
  BACKUP_ROOT: /srv/website/backups
  LOGS_ROOT: /srv/website/logs
  TEMP_ROOT: /srv/website/temp
  PROJECT_NAME: personal_website
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  POSTGRES_NAME: personal_website
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
  NGINX_HOST: localhost
  NGINX_PORT: 80

jobs:
  test_project_compose:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Создать пустой файл .env, потому что к нему обращается Docker Compose.
      - name: Fake env file
        run: touch .env

      # Сборка и запуск контейнеров.
      - name: Build and run Docker Compose
        run: |
          docker compose -f compose.yaml up -d
          docker compose -f compose.yaml ps
          sleep 10
          
      # Выполнить интеграционные тесты сервисов, запускаемых Docker Compose.
      - name: Run integration tests
        run: python -m pytest tests
        
      # Выполнить тесты основного приложения на Python и зависимостей Node.js.
      - name: Run website tests
        run: |
          docker compose -f compose.yaml exec npm test
          docker compose -f compose.yaml exec poetry run coverage run -m pytest

      - name: Stop Docker Compose
        run: docker compose -f compose.yaml down