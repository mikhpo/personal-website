# Опубликовать образ контейнера основного сервиса в несколько реестров:
# - GitHub Container registry
# - Docker Hub
name: Publish Docker image

# Выполняется после того, как закрыт Pull Request в ветку "main",
# если изменения в файлах не касаются только путей из перечня исключений.
on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
      - 'nginx/**'
      - '.vscode/**'

env:
  DOCKER_REPOSITORY: personal-website
  WORK_DIR: /srv/website
  POSTGRES_VERSION: 15
  NODE_VERSION: 20

jobs:
  push_image_to_registries:

    # Выполняется в том случае, если Pull Request завершен положительно.
    if: github.event.pull_request.merged == true
    name: Push website Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      # Параметры сборки аналогичны параметрам для Docker Compose.
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./personal_website/Dockerfile
          build-args: |
            - WORK_DIR=${{ env.WORK_DIR }}
            - POSTGRES_VERSION=${{ env.POSTGRES_VERSION }}
            - NODE_VERSION=${{ env.NODE_VERSION }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
